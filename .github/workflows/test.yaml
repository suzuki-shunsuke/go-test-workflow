---
name: Test Go
on:
  workflow_call:
    inputs:
      aqua_policy_config:
        required: false
        type: string
      aqua_policy_allow:
        required: false
        type: string
      aqua_version:
        required: true
        type: string
      go-version:
        required: true
        type: string
      golangci-lint-timeout:
        required: false
        type: string

permissions: {}

env:
  AQUA_POLICY_CONFIG: ${{inputs.aqua_policy_config}}
  AQUA_LOG_COLOR: always

concurrency:
  group: ${{github.workflow}}--${{github.ref}}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # To update pull requests by reviewdog
      contents: read # To checkout private repository
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: ${{inputs.go-version}}
          cache: true

      - uses: aquaproj/aqua-installer@4551ec64e21bf0f557c2525135ff0bd2cba40ec7 # v3.0.0
        with:
          aqua_version: ${{inputs.aqua_version}}
          policy_allow: ${{inputs.aqua_policy_allow}}

      - uses: suzuki-shunsuke/github-action-golangci-lint@4b6bb7682772359cf0e7959932803ca2ff998895 # v0.1.4
        if: |
          github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork
        with:
          timeout: ${{inputs.golangci-lint-timeout}}

      - run: |
          if [ -n "$INPUT_TIMEOUT" ]; then
            golangci-lint run --timeout "$INPUT_TIMEOUT"
          else
            golangci-lint run
          fi
        if: |
          github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork
        env:
          INPUT_TIMEOUT: ${{inputs.golangci-lint-timeout}}

      - run: go test -v ./... -race -covermode=atomic
